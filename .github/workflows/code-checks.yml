name: "Code Checks"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: read

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@4e8a7c2bf106c4c766c816b35ec612638dc9b6b2 # v7.3.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configurations
          YAML_ERROR_ON_WARNING: true
          EDITORCONFIG_FILE_NAME: .editorconfig-checker.json

  check-justfile-format:
    name: Check Justfile Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Check Justfile Format
        run: just format-check

  check-markdown-links:
    name: Check Markdown links
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check Markdown links
        uses: UmbrellaDocs/action-linkspector@a0567ce1c7c13de4a2358587492ed43cab5d0102 # v1.3.4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          config_file: .github/other-configurations/.linkspector.yml
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: nofilter
          show_stats: true

  run-codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      matrix:
        language: [go, actions]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3.28.10
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3.28.10

  check-go-format:
    name: Check Go Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "./go.mod"
          cache-dependency-path: "./go.sum"
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Check Go Format
        run: just go-format

  go-vul-check:
    name: Run Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Run Go Vulnerability Check
        uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          go-version-file: ./go.mod
          work-dir: .

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "./go.mod"
          cache-dependency-path: "./go.sum"
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Run Tests
        run: just test
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97 # v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  run-zizmor:
    name: Check GitHub Actions with zizmor
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Run zizmor ðŸŒˆ
        run: just zizmor-check-sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3.28.17
        with:
          sarif_file: results.sarif
          category: zizmor

  run-local-action:
    name: Run Local Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Local Action
        uses: ./.github/actions/local

  lefthook-validate:
    name: Lefthook Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.2.2
        with:
          version: "latest"
      - name: Run Lefthook Validate
        run: uvx lefthook validate
