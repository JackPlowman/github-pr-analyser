name: "Code Checks"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: read

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@12150456a73e248bdc94d0794898f94e23127c88 # v7.4.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configurations
          YAML_ERROR_ON_WARNING: true

  common-code-checks:
    name: Common Code Checks
    permissions:
      contents: read
      pull-requests: read
      security-events: write
    uses: JackPlowman/reusable-workflows/.github/workflows/common-code-checks.yml@cb8bab5e91314b79b7aefabab7d1a44b1fc9f5d6 # v2025.05.17.03
    secrets:
      workflow_github_token: ${{ secrets.GITHUB_TOKEN }}

  run-codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      matrix:
        language: [go, actions]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3.28.18
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3.28.18

  check-go-format:
    name: Check Go Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: "./go.mod"
          cache-dependency-path: "./go.sum"
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Check Go Format
        run: just go-format

  go-vul-check:
    name: Run Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Run Go Vulnerability Check
        uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          go-version-file: ./go.mod
          work-dir: .

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: "./go.mod"
          cache-dependency-path: "./go.sum"
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Run Tests
        run: just test
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  run-local-action:
    name: Run Local Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Local Action
        uses: ./.github/actions/local
