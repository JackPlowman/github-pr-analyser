name: "Code Quality"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  packages: read
  statuses: write

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v7.0.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configs
          YAML_ERROR_ON_WARNING: true

  check-justfile-format:
    name: Check Justfile Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Just
        uses: extractions/setup-just@v2
      - name: Check Justfile Format
        run: just format-check

  check-markdown-links:
    name: Check Markdown links
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Markdown links
        uses: UmbrellaDocs/action-linkspector@v1.1.3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          config_file: .github/other-configs/.linkspector.yaml
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: nofilter

  check-go-format:
    name: Check Go Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
          cache-dependency-path: "./go.sum"
      - name: Set up Just
        uses: extractions/setup-just@v2
      - name: Check Go Format
        run: just go-format
